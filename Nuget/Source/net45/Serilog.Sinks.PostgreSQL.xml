<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SerilogSinksPostgreSQL</name>
    </assembly>
    <members>
        <member name="T:Serilog.LoggerConfigurationPostgreSqlExtensions">
            <summary>
                This class contains the PostgreSQL logger configuration.
            </summary>
        </member>
        <member name="F:Serilog.LoggerConfigurationPostgreSqlExtensions.DefaultPeriod">
            <summary>
                Default time to wait between checking for event batches.
            </summary>
        </member>
        <member name="M:Serilog.LoggerConfigurationPostgreSqlExtensions.PostgreSql(Serilog.Configuration.LoggerSinkConfiguration,System.String,System.String,System.Collections.Generic.IDictionary{System.String,Serilog.Sinks.PostgreSQL.ColumnWriterBase},Serilog.Events.LogEventLevel,System.Nullable{System.TimeSpan},System.IFormatProvider,System.Int32,Serilog.Core.LoggingLevelSwitch,System.Boolean,System.String,System.Boolean)">
            <summary>
                Adds a sink which writes to PostgreSQL table.
            </summary>
            <param name="sinkConfiguration">The logger configuration.</param>
            <param name="connectionString">The connection string to the database where to store the events.</param>
            <param name="tableName">Name of the table to store the events in.</param>
            <param name="columnOptions">Table columns writers</param>
            <param name="restrictedToMinimumLevel">The minimum log event level required in order to write an event to the sink.</param>
            <param name="period">The time to wait between checking for event batches.</param>
            <param name="formatProvider">Supplies culture-specific formatting information, or null.</param>
            <param name="batchSizeLimit">The maximum number of events to include to single batch.</param>
            <param name="levelSwitch">A switch allowing the pass-through minimum level to be changed at runtime.</param>
            <param name="useCopy">If true inserts data via COPY command, otherwise uses INSERT INTO statement </param>
            <param name="schemaName">Schema name</param>
            <param name="needAutoCreateTable">Set if sink should create table</param>
            <returns>Logger configuration, allowing configuration to continue.</returns>
        </member>
        <member name="T:Serilog.Sinks.PostgreSQL.ColumnOptions">
            <summary>
                This class contains the column options.
            </summary>
        </member>
        <member name="P:Serilog.Sinks.PostgreSQL.ColumnOptions.Default">
            <summary>
                Gets the default column options.
            </summary>
            <value>
                The default column options.
            </value>
        </member>
        <member name="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase">
            <summary>
                This class contains the column writer base methods.
            </summary>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.ColumnWriterBase.#ctor(NpgsqlTypes.NpgsqlDbType)">
            <summary>
                Initializes a new instance of the <see cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" /> class.
            </summary>
            <param name="dbType">The column type.</param>
        </member>
        <member name="P:Serilog.Sinks.PostgreSQL.ColumnWriterBase.DbType">
            <summary>
                Gets or sets the column type.
            </summary>
            <value>
                The column type.
            </value>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.ColumnWriterBase.GetValue(Serilog.Events.LogEvent,System.IFormatProvider)">
            <summary>
                Gets the part of the log event to write to the column.
            </summary>
            <param name="logEvent">The log event.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>An object value.</returns>
        </member>
        <member name="T:Serilog.Sinks.PostgreSQL.DefaultColumnNames">
            <summary>
                This class contains the default column names.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.DefaultColumnNames.Exception">
            <summary>
                The exception.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.DefaultColumnNames.Level">
            <summary>
                The level.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.DefaultColumnNames.LogEventSerialized">
            <summary>
                The log event serialized.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.DefaultColumnNames.MessageTemplate">
            <summary>
                The message template.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.DefaultColumnNames.RenderedMessage">
            <summary>
                The rendered message.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.DefaultColumnNames.Timestamp">
            <summary>
                The timestamp.
            </summary>
        </member>
        <member name="T:Serilog.Sinks.PostgreSQL.ExceptionColumnWriter">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                This class is used to write the exception.
            </summary>
            <seealso cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.ExceptionColumnWriter.#ctor(NpgsqlTypes.NpgsqlDbType)">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                Initializes a new instance of the <see cref="T:Serilog.Sinks.PostgreSQL.ExceptionColumnWriter" /> class.
            </summary>
            <param name="dbType">The column type.</param>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.ExceptionColumnWriter.GetValue(Serilog.Events.LogEvent,System.IFormatProvider)">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                Gets the part of the log event to write to the column.
            </summary>
            <param name="logEvent">The log event.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
                An object value.
            </returns>
        </member>
        <member name="T:Serilog.Sinks.PostgreSQL.LevelColumnWriter">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                This class is used to write the level.
            </summary>
            <seealso cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.LevelColumnWriter.renderAsText">
            <summary>
                A boolean value indicating whether the level is rendered as text.
            </summary>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.LevelColumnWriter.#ctor(System.Boolean,NpgsqlTypes.NpgsqlDbType)">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                Initializes a new instance of the <see cref="T:Serilog.Sinks.PostgreSQL.LevelColumnWriter" /> class.
            </summary>
            <param name="renderAsText">if set to <c>true</c> [render as text].</param>
            <param name="dbType">The row type.</param>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.LevelColumnWriter.GetValue(Serilog.Events.LogEvent,System.IFormatProvider)">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                Gets the part of the log event to write to the column.
            </summary>
            <param name="logEvent">The log event.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
                An object value.
            </returns>
        </member>
        <member name="T:Serilog.Sinks.PostgreSQL.LogEventSerializedColumnWriter">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                This class is used to write the log event as json.
            </summary>
            <seealso cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.LogEventSerializedColumnWriter.#ctor(NpgsqlTypes.NpgsqlDbType)">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                Initializes a new instance of the <see cref="T:Serilog.Sinks.PostgreSQL.LogEventSerializedColumnWriter" /> class.
            </summary>
            <param name="dbType">The column type.</param>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.LogEventSerializedColumnWriter.GetValue(Serilog.Events.LogEvent,System.IFormatProvider)">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                Gets the part of the log event to write to the column.
            </summary>
            <param name="logEvent">The log event.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
                An object value.
            </returns>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.LogEventSerializedColumnWriter.LogEventToJson(Serilog.Events.LogEvent,System.IFormatProvider)">
            <summary>
                Converts the log event to json.
            </summary>
            <param name="logEvent">The log event.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>The log event as json string.</returns>
        </member>
        <member name="T:Serilog.Sinks.PostgreSQL.MessageTemplateColumnWriter">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                This class is used to write the not rendered message template.
            </summary>
            <seealso cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.MessageTemplateColumnWriter.#ctor(NpgsqlTypes.NpgsqlDbType)">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                Initializes a new instance of the <see cref="T:Serilog.Sinks.PostgreSQL.MessageTemplateColumnWriter" /> class.
            </summary>
            <param name="dbType">The column type.</param>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.MessageTemplateColumnWriter.GetValue(Serilog.Events.LogEvent,System.IFormatProvider)">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                Gets the part of the log event to write to the column.
            </summary>
            <param name="logEvent">The log event.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
                An object value.
            </returns>
        </member>
        <member name="T:Serilog.Sinks.PostgreSQL.PostgreSqlSink">
            <inheritdoc cref="T:Serilog.Sinks.PeriodicBatching.PeriodicBatchingSink" />
            <summary>
                This class is the main class and contains all options for the PostgreSQL sink.
            </summary>
            <seealso cref="T:Serilog.Sinks.PeriodicBatching.PeriodicBatchingSink" />
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.PostgreSqlSink.DefaultBatchSizeLimit">
            <summary>
                The default batch size limit.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.PostgreSqlSink.DefaultQueueLimit">
            <summary>
                The default queue limit.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.PostgreSqlSink.connectionString">
            <summary>
                The connection string.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.PostgreSqlSink.formatProvider">
            <summary>
                The format provider.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.PostgreSqlSink.fullTableName">
            <summary>
                The full table name.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.PostgreSqlSink.useCopy">
            <summary>
                A boolean value indicating if the copy is used.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.PostgreSqlSink.columnOptions">
            <summary>
                The column options.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.PostgreSqlSink.isTableCreated">
            <summary>
                A boolean value indicating whether the table is created or not.
            </summary>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.PostgreSqlSink.#ctor(System.String,System.String,System.TimeSpan,System.IFormatProvider,System.Collections.Generic.IDictionary{System.String,Serilog.Sinks.PostgreSQL.ColumnWriterBase},System.Int32,System.Boolean,System.String,System.Boolean)">
            <inheritdoc cref="T:Serilog.Sinks.PeriodicBatching.PeriodicBatchingSink" />
            <summary>
                Initializes a new instance of the <see cref="T:Serilog.Sinks.PostgreSQL.PostgreSqlSink" /> class.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="tableName">Name of the table.</param>
            <param name="period">The time to wait between checking for event batches.</param>
            <param name="formatProvider">The format provider.</param>
            <param name="columnOptions">The column options.</param>
            <param name="batchSizeLimit">The maximum number of events to include in a single batch.</param>
            <param name="useCopy">Enables the copy command to allow batch inserting instead of multiple INSERT commands.</param>
            <param name="schemaName">Name of the schema.</param>
            <param name="needAutoCreateTable">Specifies whether the table should be auto-created if it does not already exist or not.</param>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.PostgreSqlSink.#ctor(System.String,System.String,System.TimeSpan,System.IFormatProvider,System.Collections.Generic.IDictionary{System.String,Serilog.Sinks.PostgreSQL.ColumnWriterBase},System.Int32,System.Int32,System.Boolean,System.String,System.Boolean)">
            <inheritdoc cref="T:Serilog.Sinks.PeriodicBatching.PeriodicBatchingSink" />
            <summary>
                Initializes a new instance of the <see cref="T:Serilog.Sinks.PostgreSQL.PostgreSqlSink" /> class.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="tableName">Name of the table.</param>
            <param name="period">The time to wait between checking for event batches.</param>
            <param name="formatProvider">The format provider.</param>
            <param name="columnOptions">The column options.</param>
            <param name="batchSizeLimit">The maximum number of events to include in a single batch.</param>
            <param name="queueLimit">Maximum number of events in the queue.</param>
            <param name="useCopy">Enables the copy command to allow batch inserting instead of multiple INSERT commands.</param>
            <param name="schemaName">Name of the schema.</param>
            <param name="needAutoCreateTable">Specifies whether the table should be auto-created if it does not already exist or not.</param>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.PostgreSqlSink.EmitBatch(System.Collections.Generic.IEnumerable{Serilog.Events.LogEvent})">
            <inheritdoc cref="T:Serilog.Sinks.PeriodicBatching.PeriodicBatchingSink" />
            <summary>
                Emit a batch of log events, running to completion synchronously.
            </summary>
            <param name="events">The events to emit.</param>
            <remarks>
                Override either
                <see
                    cref="M:Serilog.Sinks.PeriodicBatching.PeriodicBatchingSink.EmitBatch(System.Collections.Generic.IEnumerable{Serilog.Events.LogEvent})" />
                or
                <see
                    cref="M:Serilog.Sinks.PeriodicBatching.PeriodicBatchingSink.EmitBatchAsync(System.Collections.Generic.IEnumerable{Serilog.Events.LogEvent})" />
                ,
                not both.
            </remarks>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.PostgreSqlSink.ClearColumnNameForParameterName(System.String)">
            <summary>
                Clears the name of the column name for parameter.
            </summary>
            <param name="columnName">Name of the column.</param>
            <returns>The cleared column name.</returns>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.PostgreSqlSink.GetFullTableName(System.String,System.String)">
            <summary>
                Gets the full name of the table.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="schemaName">Name of the schema.</param>
            <returns>The full table name.</returns>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.PostgreSqlSink.ClearQuotationMarksFromColumnOptions">
            <summary>
                Clears the quotation marks from the column options.
            </summary>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.PostgreSqlSink.GetCopyCommand">
            <summary>
                Gets the copy command.
            </summary>
            <returns>A SQL string with the copy command.</returns>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.PostgreSqlSink.GetInsertQuery">
            <summary>
                Gets the insert query.
            </summary>
            <returns>A SQL string with the insert query.</returns>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.PostgreSqlSink.ProcessEventsByCopyCommand(System.Collections.Generic.IEnumerable{Serilog.Events.LogEvent},Npgsql.NpgsqlConnection)">
            <summary>
                Processes the events by the copy command.
            </summary>
            <param name="events">The events.</param>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.PostgreSqlSink.ProcessEventsByInsertStatements(System.Collections.Generic.IEnumerable{Serilog.Events.LogEvent},Npgsql.NpgsqlConnection)">
            <summary>
                Processes the events by insert statements.
            </summary>
            <param name="events">The events.</param>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.PostgreSqlSink.WriteToStream(Npgsql.NpgsqlBinaryImporter,System.Collections.Generic.IEnumerable{Serilog.Events.LogEvent})">
            <summary>
                Writes to the stream.
            </summary>
            <param name="writer">The writer.</param>
            <param name="entities">The entities.</param>
        </member>
        <member name="T:Serilog.Sinks.PostgreSQL.PropertiesColumnWriter">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                This class is used to write all event properties.
            </summary>
            <seealso cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.PropertiesColumnWriter.#ctor(NpgsqlTypes.NpgsqlDbType)">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                Initializes a new instance of the <see cref="T:Serilog.Sinks.PostgreSQL.PropertiesColumnWriter" /> class.
            </summary>
            <param name="dbType">The column type.</param>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.PropertiesColumnWriter.GetValue(Serilog.Events.LogEvent,System.IFormatProvider)">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                Gets the part of the log event to write to the column.
            </summary>
            <param name="logEvent">The log event.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
                An object value.
            </returns>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.PropertiesColumnWriter.PropertiesToJson(Serilog.Events.LogEvent)">
            <summary>
                Converts the properties to json.
            </summary>
            <param name="logEvent">The log event.</param>
            <returns>The properties as json object.</returns>
        </member>
        <member name="T:Serilog.Sinks.PostgreSQL.PropertyWriteMethod">
            <summary>
                This enumeration contains the property write method.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.PropertyWriteMethod.Raw">
            <summary>
                The raw method.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.PropertyWriteMethod.ToString">
            <summary>
                The to string method.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.PropertyWriteMethod.Json">
            <summary>
                The json method.
            </summary>
        </member>
        <member name="T:Serilog.Sinks.PostgreSQL.RenderedMessageColumnWriter">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                This class is used to write the message part.
            </summary>
            <seealso cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.RenderedMessageColumnWriter.#ctor(NpgsqlTypes.NpgsqlDbType)">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                Initializes a new instance of the <see cref="T:Serilog.Sinks.PostgreSQL.RenderedMessageColumnWriter" /> class.
            </summary>
            <param name="dbType">The column type.</param>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.RenderedMessageColumnWriter.GetValue(Serilog.Events.LogEvent,System.IFormatProvider)">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                Gets the part of the log event to write to the column.
            </summary>
            <param name="logEvent">The log event.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
                An object value.
            </returns>
        </member>
        <member name="T:Serilog.Sinks.PostgreSQL.SinglePropertyColumnWriter">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                This class is used to write a single event property.
            </summary>
            <seealso cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.SinglePropertyColumnWriter.#ctor(System.String,Serilog.Sinks.PostgreSQL.PropertyWriteMethod,NpgsqlTypes.NpgsqlDbType,System.String)">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                Initializes a new instance of the <see cref="T:Serilog.Sinks.PostgreSQL.SinglePropertyColumnWriter" /> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="writeMethod">The write method.</param>
            <param name="dbType">Type of the database.</param>
            <param name="format">The format.</param>
        </member>
        <member name="P:Serilog.Sinks.PostgreSQL.SinglePropertyColumnWriter.Format">
            <summary>
                Gets the format.
            </summary>
        </member>
        <member name="P:Serilog.Sinks.PostgreSQL.SinglePropertyColumnWriter.Name">
            <summary>
                Gets the name.
            </summary>
        </member>
        <member name="P:Serilog.Sinks.PostgreSQL.SinglePropertyColumnWriter.WriteMethod">
            <summary>
                Gets the write method.
            </summary>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.SinglePropertyColumnWriter.GetValue(Serilog.Events.LogEvent,System.IFormatProvider)">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                Gets the part of the log event to write to the column.
            </summary>
            <param name="logEvent">The log event.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
                An object value.
            </returns>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.SinglePropertyColumnWriter.GetPropertyValue(Serilog.Events.LogEventPropertyValue)">
            <summary>
                Gets the property value.
            </summary>
            <param name="logEventProperty">The log event property.</param>
            <returns>The property value.</returns>
        </member>
        <member name="T:Serilog.Sinks.PostgreSQL.TableCreator">
            <summary>
                This class is used to create the tables.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.TableCreator.DefaultBitColumnsLength">
            <summary>
                The default bit columns length.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.TableCreator.DefaultCharColumnsLength">
            <summary>
                The default character columns length.
            </summary>
        </member>
        <member name="F:Serilog.Sinks.PostgreSQL.TableCreator.DefaultVarcharColumnsLength">
            <summary>
                The default varchar columns length.
            </summary>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.TableCreator.CreateTable(Npgsql.NpgsqlConnection,System.String,System.Collections.Generic.IDictionary{System.String,Serilog.Sinks.PostgreSQL.ColumnWriterBase})">
            <summary>
                Creates the table.
            </summary>
            <param name="connection">The connection.</param>
            <param name="tableName">Name of the table.</param>
            <param name="columnsInfo">The columns information.</param>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.TableCreator.GetCreateTableQuery(System.String,System.Collections.Generic.IDictionary{System.String,Serilog.Sinks.PostgreSQL.ColumnWriterBase})">
            <summary>
                Gets the create table query.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="columnsInfo">The columns information.</param>
            <returns>The create table query string.</returns>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.TableCreator.GetSqlTypeStr(NpgsqlTypes.NpgsqlDbType)">
            <summary>
                Gets the SQL type string.
            </summary>
            <param name="dbType">The column type.</param>
            <returns>The SQL type string.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">dbType - Cannot atomatically create column of type " + dbType</exception>
        </member>
        <member name="T:Serilog.Sinks.PostgreSQL.TimestampColumnWriter">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                This class is used to write the timestamp.
            </summary>
            <seealso cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.TimestampColumnWriter.#ctor(NpgsqlTypes.NpgsqlDbType)">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                Initializes a new instance of the <see cref="T:Serilog.Sinks.PostgreSQL.TimestampColumnWriter" /> class.
            </summary>
            <param name="dbType">The column type.</param>
        </member>
        <member name="M:Serilog.Sinks.PostgreSQL.TimestampColumnWriter.GetValue(Serilog.Events.LogEvent,System.IFormatProvider)">
            <inheritdoc cref="T:Serilog.Sinks.PostgreSQL.ColumnWriterBase" />
            <summary>
                Gets the part of the log event to write to the column.
            </summary>
            <param name="logEvent">The log event.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
                An object value.
            </returns>
        </member>
    </members>
</doc>
